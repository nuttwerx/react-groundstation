// User variables

$color_current_state: #004FA5;
$color_state_panel: #1976d2;
$text_color: #FFF;
$border_color: #EEE;

$state_button_focus_color: #43A047;
$state_button_color: #4CAF50;
$state_button_width: 95px;
$state_button_count: 6;

$state_machine_states: 'UNKNOWN_STATE', 'NO_COMMAND', 'IDLE', 'TEST_MODE', 'DRIVE', 'ARMED_WAIT', 'FLIGHT_PREP', 'READY', 'ACCEL', 'COAST_INTERLOCK', 'BRAKE', 'SPINDOWN';

.stateStatus {
    background-color: $color_state_panel;
    color: $text_color;
    width: 100%;
    text-align: center;
    z-index: 1;
    display: flex;
    flex-flow: column;
    justify-content: space-around;
    align-items: center;
}

.stateBlock {
    & {
        text-transform: capitalize;
        flex: 1;
    }

    &:empty {
        display: none;
    }

    &.currentState {
        width: 100%;
        font-size: 32px;
        flex: 0 1 10%;
        background-color: $color_current_state;
        height: 100%;
        padding: 10px;
    }

    div.unavailable,
    div.available button.unavailable {
        opacity: 0.25;
    }
    
    div {
        padding: 10px;
        transition: all 0.25s ease-in-out;
        border: 1px solid $border_color;
        margin: 10px 15px;
    }

    legend {
        border-bottom: none;
        margin-bottom: 5px!important;
        color: $text_color;
    }
}

.btn-state {
    background-color: $state_button_color;
    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
    margin-right: 5px;
    border-radius: 0;
    padding: 10px;
    width: $state_button_width;
    font-size: 2rem;
    transition: all 0.25s ease;

    &:hover,
    &:focus {
        background-color: $state_button_focus_color;
        color: $text_color;
    }
}

@keyframes state-active-flash {
    0%   {fill: #b536da}
    50%  {fill: rgba(181, 54, 218, 0.25)}
    100% {fill: #b536da;}
}

@each $_state in $state_machine_states {
    .active_#{$_state} .STATE_#{$_state} {
        animation-name: state-active-flash;
        animation-duration: 2.5s;
        animation-iteration-count: infinite;
    }
}
